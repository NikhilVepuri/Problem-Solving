class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> res = new ArrayList();
        Arrays.sort(candidates);
        findCombinations(0, candidates, target, res, new ArrayList<>());
        return res;
    }
    public void findCombinations(int ind, int[] candidates, int target, List<List<Integer>> res, List comb){
        if(target==0){
            res.add(new ArrayList<>(comb));
        }

        for(int i=ind; i<candidates.length; i++){
            if(i>ind && candidates[i]==candidates[i-1]) continue;

            if(candidates[i] > target) break;

            comb.add(candidates[i]);
            
            findCombinations(i+1, candidates, target-candidates[i], res, comb);

            comb.remove(comb.size()-1);

        }

    }
}
