class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> res = new ArrayList<>();
        helper(candidates, 0, target, new ArrayList<>(), 0, res);
        return res;
    }

    public void helper(int[] candidates, int idx, int target, List<Integer> comb, int total, List<List<Integer>> res){
        if(total == target){
            res.add(new ArrayList<>(comb));
            return;
        }

        if(total > target || idx >= candidates.length)
            return;

        comb.add(candidates[idx]);
        helper(candidates, idx, target, comb, total+candidates[idx], res);
        comb.remove(comb.size()-1);
        helper(candidates, idx+1, target, comb, total, res);

    }
}

